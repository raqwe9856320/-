@model EIP_System.ViewModels.VMCreateLeave

@{
    ViewBag.Title = "請假申請";

    List<SelectListItem> sortList = new List<SelectListItem>();
    sortList.Add(new SelectListItem { Text = "請選擇", Value = "" });
    foreach (var item in Model.leavesortList)
    {
        sortList.Add(new SelectListItem { Text = item.fLeavename, Value = item.fLeavename });
    }

    List<SelectListItem> supervisorlist = new List<SelectListItem>();
    supervisorlist.Add(new SelectListItem { Text = "請選擇", Value = "" });
    foreach (var supervisor in Model.employeelist.Where(m => m.job == "主管"))
    {
        supervisorlist.Add(new SelectListItem { Text = supervisor.name, Value = supervisor.id.ToString() });
    }
}
<div class="row">
    @*請假申請*@
    <div class="col-md-6 col-sm-6 ">
        <div class="x_panel">
            <div class="x_title">
                <h2>請假申請</h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <h5>基本資料</h5>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            @Html.LabelFor(model => model.employee.id, new { @class = "control-label col-md-3 col-sm-3 " })
                            <div class="col-md-9 col-sm-9 ">
                                @Html.EditorFor(model => model.employee.id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.employee.id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.employee.department, new { @class = "control-label col-md-3 col-sm-3 " })
                            <div class="col-md-9 col-sm-9 ">
                                @Html.EditorFor(model => model.employee.department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.employee.department, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.employee.job, new { @class = "control-label col-md-3 col-sm-3 " })
                            <div class="col-md-9 col-sm-9 ">
                                @Html.EditorFor(model => model.employee.job, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.employee.job, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.employee.name, new { @class = "control-label col-md-3 col-sm-3 " })
                            <div class="col-md-9 col-sm-9 ">
                                @Html.EditorFor(model => model.employee.name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.employee.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.leavesort, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.leavesort, sortList, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.leavesort, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.start, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.start, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                                @Html.ValidationMessageFor(model => model.start, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.end, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.end, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                                @Html.ValidationMessageFor(model => model.end, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.timecount, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.timecount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.timecount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.reason, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.reason, new { @class = "form-control", style = "height:200px" })
                                @Html.ValidationMessageFor(model => model.reason, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.supervisorId, htmlAttributes: new { @class = "col-form-label col-md-3 col-sm-3 label-align" })
                            <div class="col-md-9 col-sm-9 ">
                                @Html.DropDownListFor(model => model.supervisorId, supervisorlist, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.supervisorId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="ln_solid"></div>
                        <div class="item form-group">
                            <div class="col-md-6 col-sm-6 offset-md-3">
                                <button class="btn btn-info" type="button" id="btn_clear">清空</button>
                                <button class="btn btn-dark" type="button" id="btn_demo">demo</button>
                                <button type="submit" class="btn btn-success">送出</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


    @*公司請假相關法規*@
    <div class="col-md-6 col-sm-6">
        <div class="x_panel">
            <div class="x_title">
                <h2> 公司請假相關法規 </h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <ul class="nav nav-tabs bar_tabs" id="LeaveTab" role="tablist">
                    @foreach (var leave in Model.leavesortList)
                    {
                        <li class="nav-leave.fLeavename">
                            <a class="nav-link" id="@leave.fLeavename-tab" data-toggle="tab" href="#@leave.fLeavename" role="tab" aria-controls="a" aria-selected="true">@leave.fLeavename</a>
                        </li>
                    }

                </ul>
                <div class="tab-content" id="TabContent">
                    @foreach(var leave in Model.leavesortList)
                    {
                        var emp = Model.leavecountList.Where(m => m.tleavesort.fLeavename == leave.fLeavename).FirstOrDefault();
                        <div class="tab-pane fade" id="@leave.fLeavename" role="tabpanel" aria-labelledby="@leave.fLeavename-tab">
                            <div style="height:280px">
                                @Html.Raw(leave.fLeavecontent)
                            </div>
                            <div class="x_title">
                                <h2> 員工假別使用統計 </h2>
                                <div class="clearfix"></div>
                            </div>
                            <div class="x_content">
                                <table class="table table-bordered" id="leavecount" style="text-align: center; vertical-align: middle;">
                                    <thead class="bg-primary">
                                        <tr>
                                            <th>總時數</th>
                                            <th>已用時數</th>
                                            <th>剩餘時數</th>
                                        </tr>
                                    </thead>
                                    <tr>
                                        <td style="font-size:20px">@emp.fAlltime</td>
                                        <td style="font-size:20px">@emp.fUesdtime</td>
                                        <td style="font-size:20px">@emp.fRemaintime</td>
                                    </tr>
                                </table>
                                <h3>使用期限: @emp.fStartdate.Value.ToString("yyyy-MM-dd") ~ @emp.fEnddate.Value.ToString("yyyy-MM-dd")</h3>
                            </div>
                        </div>

                    }

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //demo
        $("#btn_demo").click(function () {
            $("#leavesort").val("事假");
            $("#start").val("2020-09-28T09:00");
            $("#end").val("2020-09-28T17:00");
            $("#timecount").val(8);
            $("#reason").val("測試用");
            $("#supervisorId").val("1");
        });

        //clear
        $("#btn_clear").click(function () {
            $("#leavesort").val("");
            $("#start").val("");
            $("#end").val("");
            $("#timecount").val("");
            $("#reason").val("");
            $("#supervisorId").val("");
        });

        //觸發時數自動計算
        $("#start").change(function () {
            counthours();
        });
        $("#end").change(function () {
            counthours();
        });
        function counthours() {
            //use monent.js
            let start = moment($("#start").val());
            let end = moment($("#end").val());
            var duration = moment.duration(end.diff(start));
            var hours = duration.asHours();
            $("#timecount").val(hours);
        }

        //假別選擇
        $("#leavesort").change(function () {
            console.log($(this).val());
            let target = $(this).val();
            $(`#${target}-tab`).trigger('click');
        });

    </script>
}
